<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:rabbit="http://www.springframework.org/schema/rabbit"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">

  <!--配置 connection-factory, 指定连接 rabbitmq server 参数-->
  <rabbit:connection-factory id="connectionFactory" host="${rabbit.host}" port="${rabbit.port}"
    username="${rabbit.username}" password="${rabbit.password}" virtual-host="${rabbit.vhost}"
    channel-cache-size="${rabbit.channelCacheSize}" publisher-confirms="true"/>

  <!--<bean id="rabbitConnectionFactory"-->
    <!--class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">-->
    <!--<constructor-arg value="${rabbit.host}"/>-->
    <!--<property name="username" value="${rabbit.username}"/>-->
    <!--<property name="password" value="${rabbit.password}"/>-->
    <!--<property name="virtualHost" value="${rabbit.vhost}"/>-->
    <!--<property name="channelCacheSize" value="${rabbit.channelCacheSize}"/>-->
  <!--</bean>-->


  <!-- 通过指定下面的admin信息, 当前的producer中的 exchange 和 queue 会在 rabbitmq server 自动生成-->
  <rabbit:admin id="admin" connection-factory="connectionFactory"/>
  <rabbit:template id="rabbitTemplate" connection-factory="connectionFactory" /> <!--message-converter="jsonMessageConverter"-->

  <!--<bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter"></bean>-->

  <!--定义queue 说明：durable:是否持久化 exclusive: 仅创建者可以使用的私有队列，断开后自动删除 auto_delete: 当所有消费客户端连接断开后，是否自动删除队列 -->
  <rabbit:queue name="register.account" durable="true" auto-delete="false" exclusive="false"/>
  <!--&lt;!&ndash;定义queue &ndash;&gt;-->
  <rabbit:queue name="queueTest" durable="true" auto-delete="false" exclusive="false" />

  <!--定义 direct exchange 绑定 queue-->
  <rabbit:direct-exchange name="${user.register.exchange}" durable="true" auto-delete="false">
    <rabbit:bindings>
      <rabbit:binding queue="register.account" key="${user.register.routingkey}"></rabbit:binding>
    </rabbit:bindings>
  </rabbit:direct-exchange>


  <!--定义消费者-->

  <bean id="createAccountConsumer" class="com.makesailing.neo.queue.service.CreateAccountConsumer"/>

  <rabbit:listener-container connection-factory="connectionFactory">
    <!--queue listener 观察 监听模式 ,当有消息到达时会监听通知监听所在对应队列上监听对象-->
    <rabbit:listener queues="register.account" ref="createAccountConsumer"/>
  </rabbit:listener-container>

</beans>